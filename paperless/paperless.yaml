---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: paperless
  namespace: default
  labels:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/name: paperless
  annotations:
    fluxcd.io/automated: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: paperless
      app.kubernetes.io/name: paperless
  updateStrategy:
    type: RollingUpdate
  serviceName: paperless
  strategy:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: paperless
        app.kubernetes.io/name: paperless
    spec:
      containers:
      - image: aarlint/paperless-arm64
        name: paperless-webserver
        imagePullPolicy: Always
        command: ["/sbin/docker-entrypoint.sh"]
        args: ["gunicorn", "-b", "0.0.0.0:8000"]
        env:
        - name: PAPERLESS_OCR_LANGUAGES
          value: "en"
        - name: USERMAP_UID
          value: "1000"
        - name: USERMAP_GID
          value: "1000"
        ports:
        - containerPort: 8000
          name: http
        volumeMounts:
        - name: config
          mountPath: /usr/src/paperless/data
        - name: media
          mountPath: /usr/src/paperless/media
      - image: aarlint/paperless-arm64
        imagePullPolicy: Always
        name: paperless-consumer
        command: ["/sbin/docker-entrypoint.sh"]
        args: ["document_consumer"]
        env:
        - name: USERMAP_UID
          value: "1000"
        - name: USERMAP_GID
          value: "1000"
        - name: PAPERLESS_CONSUMPTION_DIR
          value: "/mnt/storage/data/consume"
        - name: PAPERLESS_TIME_ZONE
          value: "America/New_York"
        - name: PAPERLESS_OCR_LANGUAGES
          value: "en"
        volumeMounts:
        - name: config
          mountPath: /usr/src/paperless/data
        - name: media
          mountPath: /usr/src/paperless/media
        - name: consume
          mountPath: /mnt/storage/data/consume
          subPath: paperless
        livenessProbe:
          initialDelaySeconds: 10
          exec:
            command:
            - "pgrep"
            - "-s"
            - "1"
      volumes:
      - name: consume
        persistentVolumeClaim:
          claimName: paperless-drop
      - name: media
        persistentVolumeClaim:
          claimName: paperless-media
      - name: config
        persistentVolumeClaim:
          claimName: paperless-config
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-drop
  annotations:
    volume.beta.kubernetes.io/storage-class: "nfs-client"
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-config
  annotations:
    volume.beta.kubernetes.io/storage-class: "nfs-client"
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-media
  annotations:
    volume.beta.kubernetes.io/storage-class: "nfs-client"
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/name: paperless
  name: paperless
  namespace: default
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/name: paperless
  type: ClusterIP

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: paperless-ingress
  namespace: default
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`paperless.aa.ia4.eu`)
      kind: Rule
      services:
        - name: paperless
          port: 8000